// Code generated by go-bindata.
// sources:
// templates/dash.tmpl
// templates/login.tmpl
// templates/upload.tmpl
// templates/webshell.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDashTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x5f\x8f\x1c\x47\x11\x7f\xbf\x4f\x51\x1e\x1e\xee\x01\xf7\xce\x1a\x3b\x51\x30\xb3\x8b\x90\x6d\x88\xd1\x9d\x12\x85\xe3\x01\x45\x11\xaa\x99\xa9\x99\xe9\x73\x4f\xf7\xa4\xbb\x67\xf7\x16\x93\x27\x24\x40\x89\x40\xc9\x03\x20\x20\x42\x58\x8a\x04\x12\x52\x10\x12\x44\x01\xc7\xe2\xcb\xdc\xdd\x86\x6f\x81\xba\x67\x66\xff\xef\xde\xfa\x8c\xc5\x4a\x77\x3b\xd3\x5b\xf5\xab\x3f\xfd\xeb\xea\xea\x8e\x6e\xdc\x7f\xe3\xde\xc9\x0f\xde\x7c\x00\x85\x2d\xc5\xf0\x20\x72\x5f\x20\x50\xe6\x83\x20\x91\x01\xc8\x9c\x61\x55\x0d\x02\xc1\x65\x7d\x76\x1f\x4d\x11\x0c\x0f\x0e\xa2\x82\x30\x1d\x1e\x00\x00\x44\x25\x59\x84\xc2\xda\x8a\xd1\xbb\x35\x1f\x0d\x82\x7b\x4a\x5a\x92\x96\x9d\x4c\x2a\x0a\x20\x69\xde\x06\x81\xa5\x33\x1b\x3a\xf0\x6f\x40\x52\xa0\x36\x64\x07\xdf\x3f\xf9\x36\x7b\x2d\x68\x71\x2c\xb7\x82\x86\x97\x1f\xff\xe2\xe2\xfd\x27\x17\xbf\xfd\xf3\xf4\xf7\x1f\x5d\xfe\xf2\x4f\x17\x9f\xfe\xe1\xf2\x37\x9f\x5d\xfc\xed\x57\xd3\x4f\xfe\x15\x85\x8d\xc8\x41\x23\x2f\xb8\x7c\x04\x9a\xc4\x20\x30\x85\xd2\x36\xa9\x2d\xf0\x44\xc9\x00\x0a\x4d\xd9\x20\x08\x8d\x45\xcb\x93\x30\xc3\x91\x1b\xee\xf1\x44\x05\x60\x27\x15\x0d\x02\x5e\x62\x4e\xe1\x19\xf3\xe2\x4b\x70\xcb\xaa\x98\x96\x5c\x86\x89\x31\x61\xac\x94\x35\x56\x63\xd5\x2b\xb9\xec\x25\xc6\x04\xad\x65\x3b\x11\x64\x0a\x22\xdb\x45\xb1\x01\xc6\x01\x64\x4a\x5a\x86\x63\x32\xaa\xa4\xeb\x60\xcc\x5d\xf1\xe2\xdb\xd4\x17\x66\x44\x62\x49\x83\x60\xc4\x69\x5c\x29\x6d\x17\xe6\x61\xcc\x53\x5b\x0c\x52\x1a\xf1\x84\x98\x7f\xb9\x09\x5c\x72\xcb\x51\x30\x93\xa0\xa0\xc1\xad\x5e\x3f\x18\xae\x41\xa5\x64\x12\xcd\x2b\xcb\x5d\x8e\x67\x68\xc7\x4a\x72\xab\x34\x4c\x54\xad\xe1\xc8\x71\x04\x0c\xe9\x11\x69\xb0\x85\x56\x75\x5e\x00\x82\xe1\x65\x25\x08\xc6\x14\x43\x8a\xa6\x88\x15\xea\xb4\x07\x6f\x54\x24\xc1\xa8\x5a\x27\x04\x28\x53\xc8\x34\xd1\x8d\x0d\x76\xb1\xaa\x04\xb1\x52\xc5\x5c\x10\x1b\x53\xec\xe8\xc8\x12\xac\x30\x16\x8b\xf4\x9a\x90\x59\xca\xdf\x76\x66\xec\x4d\x8c\x95\xc9\x38\x0c\xfd\x34\x9a\x5e\xae\x54\x2e\x08\x2b\x6e\x7a\x89\x2a\xdd\xac\x7c\x33\xc3\x92\x8b\xc9\xe0\x98\xb4\xe6\x63\x42\x5b\x90\xbe\x7b\xbb\xdf\xe7\x16\x05\x4f\x6e\xde\xee\xf7\x7f\xec\xc2\xfd\xea\xf7\x50\x9a\xbb\x77\xfa\xfd\x9b\xaf\xf6\xfb\x87\xde\xc5\xc3\xf9\xfc\x1d\x36\x5e\x1c\xfa\x85\x92\x18\x73\xb8\x1e\xce\x7c\xae\x5b\x8f\x3b\xd9\x95\xd8\x1c\x51\x4a\x6c\x69\xf6\x62\x30\xb6\xa0\x92\xcc\xff\x00\x08\x25\x2f\xd1\x52\x8b\xd4\x40\xdd\x60\x0c\xbe\x25\xf3\x5a\xa0\x23\x4f\x6c\x80\xb1\xd6\x48\xc3\x35\x30\x3a\x99\x81\x9c\x3a\x0c\x2f\xeb\x57\xd0\xa9\x59\x32\x7a\x8a\x23\x6c\x94\x82\x61\x14\x36\x4f\xfb\x60\x31\xad\x6a\x4b\xcf\x81\xe6\x7c\x3e\x22\x78\xfd\xe4\xf8\xe8\x15\x30\x05\x2f\x6f\x42\xa6\x34\x3c\x7c\xf0\x2a\x7b\x0d\x4c\x5d\xb9\xe5\x06\x2a\x6b\x05\x48\x50\x49\xd2\x2e\x44\x76\x83\xb1\xb7\x79\x06\xc2\xc2\xc3\x07\xf0\xf5\x77\x9a\xd1\xe6\xb3\xe4\xa9\x2b\xa9\xe6\x6e\xe8\x4b\xe6\x2b\xce\x4e\xcb\xbb\x44\xa5\xe4\x79\x67\x46\x32\xb4\xba\x96\x8f\x1a\x11\x17\xc2\x8a\xaf\x8d\xbd\xb7\x49\xa6\x3c\x7b\xc7\x39\x10\x85\x4d\xe1\x3e\x88\x62\x95\x4e\xba\x59\x48\xf9\x08\x78\x3a\x08\xc6\x1a\xab\x8a\x74\x37\x3b\xfe\x37\x89\x23\x48\x04\x1a\x33\x08\x24\x8e\x62\xd4\x2c\xa5\x0c\x6b\x61\xa1\x7d\x6d\x12\xca\x0c\x4f\x29\x00\xad\x04\x79\x41\x9e\xa3\x2f\x14\x8b\xd1\xb5\x96\x5a\x34\xa7\xe0\xf4\x13\x25\x04\x56\x86\x56\x44\xbd\x78\x2d\x16\x6c\x43\x49\x96\x9b\x92\x64\x1d\x78\x6f\x1d\x00\xf3\xaf\xeb\x9a\x2d\x4f\x17\xb4\x99\x0b\xdc\xc7\xb6\x49\x76\xd5\xb9\x54\xab\x2a\x55\x63\x09\x95\x56\x99\xab\x3b\xed\x34\xee\x50\xf7\x10\x08\x29\x5a\x64\x56\xe5\xb9\x4b\x44\x07\x13\xac\xe2\xb6\x12\xdd\x2a\xf9\xca\x15\xb8\x0d\x37\x2a\x94\x1d\x4e\x22\x08\x75\x30\x5c\x1e\x8c\x85\x4a\x1e\x41\xc9\x2c\x3b\x33\x7b\x00\xba\xcf\xe3\xc7\x3c\x83\x5e\x6d\x48\xff\xd0\x15\xdb\xf7\xde\xdb\x4b\xab\x71\xc7\x6a\x25\xf3\xce\xb6\xdf\xdf\x62\x25\xd2\x60\xf8\xf8\xf1\x22\x60\x14\x36\x82\xfb\xf9\xd3\xf8\x44\x32\x7d\x0e\x4f\x1a\x77\x42\x97\x89\x95\x84\xb8\x95\xcc\xca\xda\x52\x0a\xfe\xf1\xcc\x80\xcf\x51\x30\x9c\x7e\xfa\x64\xfa\xe1\x4f\x21\x8a\x67\x09\x45\x4d\x7e\xa9\xc7\xc3\x19\x54\xf3\xbd\x7b\xc2\x43\xbc\x42\x60\x4e\xe1\xd9\xdc\x3b\xce\x42\x5b\x0d\x53\xc8\x30\xa5\x87\xf2\x2d\x9e\x17\x76\xff\xb9\x8b\x04\x1f\x46\xd8\xf5\x08\x75\x28\x54\xae\x6a\x1b\x0c\x8f\xfc\xb7\xf3\x2a\x0a\x05\xbf\xca\xf7\x5a\xec\x58\x0d\x61\xca\x47\xfb\x2d\x16\x67\x7c\xcf\x05\x32\xfd\xc9\xb3\xeb\x58\xdc\x1e\xcc\xc2\x22\xc7\xc4\xf2\xd1\xa6\x32\x32\x93\x9d\x25\x2c\x18\x46\x33\xb5\x0c\x21\x43\xe6\x2b\x51\x81\xda\x32\xe5\x58\xc0\x57\x98\xe4\x0a\x88\xc0\x98\x44\x30\xfc\xf2\xdf\x1f\x4e\x9f\xfe\xfd\xfc\x9f\x1f\x4c\x3f\xfe\xa2\xa5\xc8\x92\x68\x86\x80\x5a\xab\x71\xd0\x11\x69\x2b\x47\x76\x46\xb5\x4f\x18\x75\x25\x14\xa6\xeb\xc1\xcc\xc6\x77\xc5\x71\xf1\xc9\xef\x2e\x7f\xfd\xb3\xf3\xa7\x9f\x9d\x7f\xfe\xfe\xf9\x17\x7f\xfc\x3f\x87\x52\xd5\xb1\xe0\xc9\x7a\x28\x6e\xc1\xec\x11\xcc\xf9\xe7\x1f\x7c\xf9\xec\x59\x13\xcf\xcb\x8a\xa4\xa9\x95\x89\xe0\x5b\x6a\xd3\x9e\x91\x8e\x29\x36\x05\x09\xb1\x1e\xab\xc0\xca\xaa\xea\x8a\x48\xa7\xcf\x3e\xfa\xcf\x93\x7f\x4c\x9f\xfe\x7c\xfa\x97\xbf\xbe\xbc\x48\x37\x57\xe0\xa6\x62\x2c\xef\xe8\xcb\x8b\x36\x0a\x25\x8e\x16\xdb\x87\xae\xb5\xa8\x30\x27\xd6\xf5\x17\x9d\xaf\xb9\xc6\x09\x8b\xf3\x1d\x4d\x82\x56\x63\x88\x95\x4e\x49\xb3\x58\x59\xab\xca\x4d\x5d\xc2\x5a\x8b\xb2\xd2\x9a\x58\x55\xc1\xb8\xe0\x96\x9c\xad\xf5\x16\x05\x7c\x17\x3b\x08\x4a\xd4\x39\x97\xad\x9d\xbb\xd0\xdf\xd6\x56\x2c\xb8\xd7\xda\xb9\xba\xb5\xc0\x15\x8d\x92\xbb\xf2\x2f\xf8\x8f\x08\xe6\x8f\xcc\x39\xc2\xbe\x06\xb1\x95\xee\x8f\x55\x9a\x97\xa8\x27\xb0\x6f\x97\xb0\xa1\xa6\x99\x8e\x4d\xdb\x49\xb0\xbd\xe8\x2e\x77\x5f\xad\xe7\x56\x55\xcc\x1d\x00\x4c\x37\xa0\xdd\xce\xb5\x2b\xf6\x2b\xf7\xa1\x0d\xfb\xd8\xd5\x1b\xe0\x4a\xac\x86\xe7\x92\x79\x55\x1f\xef\x91\xca\x41\xd5\xf6\xfa\x7b\xf7\x8e\x82\xb6\xbe\x08\x60\xce\xfc\xe5\x21\x9f\xdb\xad\xe4\x2e\x48\xab\x4d\x7c\x76\x07\x8c\xe2\xce\xac\x89\xe1\x56\xd0\xea\xb6\x53\xdc\x99\x9d\x27\xd6\x54\xfd\x81\x8d\x99\x31\xb7\x49\x41\x7a\x18\x85\xcb\x03\x9b\x15\x5d\x85\x89\xd1\x49\x77\x4f\x9b\xc1\x4f\xa8\xac\x04\x5a\x32\xf0\x1d\xb2\xf0\x16\xc9\x94\x34\xa5\xf0\x3a\x69\xda\x0c\x3c\x2b\x00\xa2\xce\xb9\x34\xb3\xb5\xbf\xd2\xff\xdc\xf7\x5d\xb2\xcc\xd9\x88\xd3\x78\x03\xcc\x3a\x4d\xbb\xec\x1e\x6c\x90\x59\xcc\xbc\x77\xfb\xbb\xb3\xe3\xdc\xe2\x31\x0c\xde\x14\x98\x50\x0a\x68\x5d\xd2\x80\x64\xea\xce\x6d\xee\x31\x55\x49\xed\xda\x19\x30\xca\xbf\xbb\xf2\x65\xc0\x6d\x44\x90\xa1\xb1\x0b\x59\xdc\x72\xb8\x9c\xdd\x96\xbd\xf0\x31\xb5\x54\x69\x2d\xc8\xbc\x30\x8e\x29\x95\xb2\x05\xa7\xfd\xcf\xce\xf3\x3c\x1d\x23\x97\x62\x02\xcd\x0f\x5b\x0e\xe9\xcb\x37\x55\xa7\x26\x3c\x7d\xb7\x26\x3d\x61\xb7\x7b\xb7\x7a\xb7\x3a\xa3\xbb\x5c\x5d\x03\x58\xbe\x74\x7b\x5e\xed\x96\x70\xa1\x3f\x35\x1e\x93\xac\x5b\x87\x7a\xb3\x81\x6b\x43\x1a\xc1\x4b\x93\x68\x25\x44\x87\x39\x1f\xd9\xe0\xeb\x3c\x8f\xf7\x6a\x63\x55\xe9\x6f\xbb\x1a\x2c\x98\x67\x7e\xcf\xac\x72\x69\x2a\x2e\x39\x5e\xdb\xf9\x0a\x13\xf2\xff\x36\x79\x7a\x10\x85\xed\xc5\x40\xe4\x2f\x15\x86\xff\x0d\x00\x00\xff\xff\x9b\xa5\xd8\x1a\x1e\x16\x00\x00")

func templatesDashTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDashTmpl,
		"templates/dash.tmpl",
	)
}

func templatesDashTmpl() (*asset, error) {
	bytes, err := templatesDashTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dash.tmpl", size: 5662, mode: os.FileMode(436), modTime: time.Unix(1509976727, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLoginTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\xcd\x6e\xe4\x44\x10\xbe\xcf\x53\x14\x7d\xe0\x44\x4f\xef\x90\x03\x48\xd8\x96\x90\xb8\x70\x40\x20\xc1\x0b\xb4\xdb\x35\xe3\xce\xb6\xbb\xbd\xdd\xe5\x4c\x46\xe2\x12\x7e\x22\x10\x5a\xd8\x15\xbb\x42\x41\x20\x2d\x2b\x21\x82\x40\xca\x71\x91\x56\x43\x5e\x26\x8e\x67\xdf\x02\x79\xec\xc9\x64\x66\x22\x36\xb0\x37\x77\xd7\x57\x5f\x7f\x5d\xf5\x75\x39\xca\xa9\x30\xc9\x60\x10\xe5\x28\xb3\x64\x30\x00\x00\x88\x0a\x24\x09\x2a\x97\x3e\x20\xc5\xac\xa2\x31\x7f\x9b\x25\xd7\x42\x56\x16\x18\xb3\x03\x8d\xd3\xd2\x79\x62\xa0\x9c\x25\xb4\x14\xb3\xa9\xce\x28\x8f\x33\x3c\xd0\x0a\xf9\x72\xf1\x06\x68\xab\x49\x4b\xc3\x83\x92\x06\xe3\xd1\xf0\x0e\x5b\x1d\x43\x9a\x0c\x26\xcd\xe7\xf3\xc5\x6f\xc7\xf5\xe9\x11\x7c\x0a\xef\x4e\xd0\x52\x24\xba\x40\x8f\x32\xda\xde\x85\xdc\xe3\x38\x66\x22\x90\x24\xad\x84\xcc\x0a\x6d\x85\x0a\x41\xa4\xce\x51\x20\x2f\xcb\x61\xa1\xed\x50\x85\xc0\xc0\xa3\x89\x59\xa0\x99\xc1\x90\x23\xd2\x4a\xf8\x0d\x34\x2d\xc1\xd8\x59\xe2\x72\x8a\xc1\x15\xf8\x6f\x1c\xb7\xd0\x22\xad\x2e\x24\xe1\x7f\x55\xb1\x26\x58\xc2\x5f\x9e\xde\xc5\x72\xe7\x49\x55\x04\x5a\x39\xcb\xb6\x28\xc7\xf2\xa0\xdd\x1e\x6a\xe5\x18\xd0\xac\xc4\x98\xe9\x42\x4e\x50\x1c\xf2\x25\xbc\xed\xb7\xe8\x1b\x1e\xa5\x2e\x9b\x81\x32\x32\x84\x98\x4d\xbc\x9c\xf1\x74\x72\x75\xdf\x4c\x1f\xac\x42\x85\xce\x32\x83\x3c\x75\x87\x40\x78\x48\x5c\xa1\x25\xf4\x60\xdc\x44\xdb\xa0\x3c\xa2\x85\xbe\x00\x19\x8c\x65\x86\xef\xdb\xf7\xdc\xd4\xf6\xc2\x57\x64\xeb\xd5\x7a\x67\x63\x6b\xb9\x9d\x8f\x56\x87\x1a\x37\x71\xbc\x75\x1b\x6b\x6d\x12\x89\x7c\xb4\x85\x8f\xc4\x2e\x6b\xbe\x97\x5c\xfe\xf9\x74\x71\xfe\xed\xc5\xfc\xbc\x79\x74\x0a\x57\x06\xeb\xdd\x95\xef\x6d\x25\x94\xc9\xc5\xfc\xbc\x7e\x38\xaf\x7f\x3a\x5d\x7c\xf6\x3b\x5c\xfe\xf0\xa4\x79\xfc\x5d\xfd\xe0\x61\xfd\xf5\xfd\x48\x94\x3b\xe0\xc5\xd9\xb3\xc5\xdf\xdf\xd7\x5f\xfe\x7a\xf1\xd7\x37\x2f\x7e\x7e\xda\xfc\xf8\xc5\xc5\xf9\x2f\x97\x47\x67\xcd\xc9\xf3\x17\x27\xc7\xc3\xdd\x94\xb1\xf3\x05\x14\x48\xb9\xcb\x62\xf6\xd1\x87\x1f\x7f\xc2\x40\x2a\xd2\xce\xc6\x4c\x54\x62\x59\x41\x76\x55\x66\x4e\x0c\xbc\x33\x18\xb3\x36\x8d\x25\xbb\xe5\xb9\xd6\x94\x16\xc2\x27\xde\x55\xe5\x0d\xc0\x25\x58\xdb\xb2\x35\x49\x16\xb3\x65\x19\xfb\xa7\xdb\x7d\x77\xce\x68\xbb\xc9\x36\x08\xdb\xe7\xec\x9d\x61\x50\x1a\xa9\x30\x77\x26\x43\x1f\xb3\xe6\xd1\xe9\xe5\x57\xcf\xea\x07\xf7\x5b\x77\xde\xab\xb4\xc7\x2c\x66\x37\xe9\xdb\x6d\xc9\xab\xc8\x2e\x65\x08\x53\xe7\xb3\x95\xf4\xf5\xba\x93\xbf\x5e\xbf\xfc\x0a\xf5\xd9\x71\xf3\xe4\xe8\x7f\xea\x4f\x2b\x22\x67\xfb\x53\x43\x95\x16\x7a\x5d\xb6\x94\x2c\xa4\x64\x79\xe9\x75\x21\xfd\x0c\x52\xe3\xd4\x5d\x18\x57\xc6\x74\x53\x10\x0a\x9e\xb2\xa4\x39\x79\x5e\xcf\x1f\x47\xa2\x63\xda\x32\x89\x68\x75\x6f\x7b\xed\xba\x2b\x12\x88\x42\x21\x8d\x69\x5f\x42\x73\xf4\x47\x37\x2b\xe1\x75\xe5\xca\xd9\x3b\xf0\xe6\x9d\xd1\x5b\x91\xe8\xe2\xb0\xe1\xc0\x6b\xd7\xe9\x3f\xbb\xef\xd7\x38\x87\x0f\xa4\xb6\x66\x06\x41\x79\x5d\x52\x00\xce\x7b\x5c\xb7\x01\xc1\xab\xed\x31\xb5\x1f\xc4\xfe\xbd\x0a\xfd\x8c\xef\x0d\x47\xc3\xd1\x72\x62\xee\x07\x96\x44\xa2\xcb\xb9\x0d\xc1\xe6\xcc\xde\xcc\x1e\x44\xa2\x9d\x47\xdd\x80\x6a\xff\x4c\xff\x04\x00\x00\xff\xff\x41\x85\x87\x24\xa0\x06\x00\x00")

func templatesLoginTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoginTmpl,
		"templates/login.tmpl",
	)
}

func templatesLoginTmpl() (*asset, error) {
	bytes, err := templatesLoginTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/login.tmpl", size: 1696, mode: os.FileMode(436), modTime: time.Unix(1509976715, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUploadTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5b\x6f\x1c\xb7\x15\x7e\x17\xa0\xff\x70\x42\x07\x95\x9c\x68\x76\x24\xd7\xbd\x40\xd9\x5d\x20\x71\xeb\x20\xad\x72\x81\x6d\x15\xe8\xe3\xd9\x99\xb3\xb3\xb4\x39\xe4\x94\xe4\xec\x6a\x6d\xf8\xa1\x08\xd0\x06\xcd\x43\xd3\x97\x3e\x14\x7d\x68\x80\x02\x7d\x08\xd0\x02\x45\xd3\xa6\x70\x84\xfe\x19\x25\xeb\xfe\x8b\x80\x1c\xce\xce\x5e\x46\xab\x4d\x64\xc3\xb0\x76\x86\x3c\xfc\xce\x77\xce\x9c\x0b\xc9\xee\x2b\x3f\x79\xff\xce\x83\x5f\x7e\xf0\x53\x18\xd9\x5c\xf4\x77\x77\xba\xaf\x44\x11\x68\x12\x84\x86\x60\x7c\xbb\x73\xbb\xf3\xc3\x03\x48\x54\x31\xd5\x3c\x1b\x59\xb8\x75\x78\x74\x1b\x22\xf7\xf3\x23\xf8\x39\x6a\xcb\x1f\xc1\x2f\xb8\x99\x90\x99\xa0\x46\x09\x51\x14\x20\x4c\x59\x14\x9a\x8c\x81\x9f\xdd\x3f\x95\x9a\x8c\x12\x63\x4a\x4f\xf8\x40\xa3\x9e\x9e\xde\x3b\x09\x82\x4e\x27\x08\x94\x59\x8f\x25\x92\xf5\x77\x77\xdc\x18\x61\xda\xdf\xdd\x01\x00\xe8\xe6\x64\x11\x92\x11\x6a\x43\xb6\xc7\x4e\x1f\xdc\x8d\x7e\xcc\x20\xae\x67\x2d\xb7\x82\xfa\x5f\xff\xf1\xb7\x17\xcf\xfe\x7d\xf1\xc5\xef\x2e\xbe\xfc\x4b\x37\xae\xc6\x82\x80\x33\x45\x70\xf9\x08\x46\x9a\x86\x3d\x66\x2c\x5a\x9e\xc4\x89\x31\xf1\x40\x29\x6b\xac\xc6\xa2\x93\x73\xd9\x49\x8c\x61\xce\x66\x27\x32\x15\x64\x46\x44\x96\x55\x14\x3d\x8e\xc7\xa8\xe6\x47\x4a\xdb\xa4\xb4\xc0\x13\x25\x59\xc0\x8d\x03\xf0\x10\xc7\x6e\xb8\xc3\x13\xc5\xc0\x4e\x0b\xea\x31\x9e\x63\x46\xf1\x59\xe4\xc5\x97\xe0\xd6\x28\x0d\xb9\x20\x2e\x8b\xd2\x36\x94\x72\x4a\x39\xf6\x18\x0a\xd1\x42\xaf\x52\x60\xe9\xcc\xc6\x5e\x78\xee\x16\x93\x68\x5e\x58\x30\x3a\x99\xe3\x3f\x34\xf1\xc3\x5f\x95\xa4\xa7\xd1\xf7\x3b\xb7\x3a\x47\x5e\xc3\x43\xc3\xfa\xdd\xb8\x12\xde\xbc\xb4\x10\x65\xc6\xa5\x89\x8d\xd2\x16\x07\x82\xea\xe5\x8b\x14\x1e\xe2\x18\xab\xd5\xdb\xa2\x2e\xdb\x7b\x6d\x38\xa1\x12\x14\x64\xe2\xc7\xa3\x6b\x62\xd9\x11\xe5\x64\xe2\x21\x56\x4f\x2f\x86\x5d\xa1\x8a\x82\xf4\x8b\xc1\x2a\x0b\xa1\x30\x5d\x09\xe1\xed\x50\xdd\xbf\xd5\x10\xac\xa3\x17\xd3\x9c\xcb\x6d\x93\xa3\x25\x94\xe3\xc5\x58\x56\xd2\x46\x38\x21\xa3\x82\x03\xbf\x2d\x48\x43\x06\x25\xcf\xd1\xd2\x35\x10\xbc\xfc\xa5\xeb\x77\x77\xba\x71\x28\x39\xbb\x3b\xdd\x81\x4a\xa7\xfd\xb9\x97\x52\x3e\x06\x9e\xf6\xd8\x44\xa3\xfb\x7c\x6c\x3e\xe3\x67\x25\x8e\x21\x11\x68\x4c\x8f\x49\x1c\x0f\x50\x47\x29\x0d\xb1\x14\x16\xc2\x6b\xc5\x24\x32\x3c\x25\x06\x5a\x09\xf2\x82\x3c\x43\xcb\x9b\x6a\x30\x87\x73\xca\x02\x9c\x5b\xe1\x00\x12\x25\x04\x16\x86\x56\x65\xbd\x7c\x29\x16\xb4\x43\x4e\x96\x9b\x9c\x64\xc9\x3c\x63\x87\x10\xf9\xd7\x96\xa5\xc1\x65\x0b\xcb\x23\xe7\x81\xca\xc0\x36\xe1\x55\x7e\xa9\x56\x45\xaa\x26\x12\x0a\xad\x5c\x1a\x47\x24\x28\x27\x69\x37\xad\xf7\x18\x08\x29\x5a\x8c\xac\xca\x32\xe7\x8d\x1a\x87\xad\x02\x07\x89\xba\xc0\xde\xb8\x0a\xb8\xca\x96\x02\x65\x0d\x94\x08\x42\xcd\xfa\xcb\x83\x03\xa1\x92\x47\x90\x47\x36\x3a\x33\x7e\xce\x6a\x25\xb3\x7a\xd6\xc7\xec\x40\x89\x94\xf5\xdf\x74\xb1\xd3\x8d\xab\xf9\x2d\x54\x2f\xf3\x88\x9d\xce\x15\xd5\x2e\x29\xa3\xbc\xb4\x94\x82\x7f\x3c\x33\xe0\xd9\xb0\xfe\xec\xef\x9f\xce\x3e\xf9\x0d\x74\x07\x73\xea\xa8\xc9\x67\xed\xa0\x3f\x87\xaa\x7e\xaf\x70\x6e\x8c\x57\x49\x34\x21\x33\x77\xb4\x8b\x11\x08\x39\x96\xc2\x10\x53\x7a\x47\xde\xf3\x9d\xbe\xf6\xd3\x16\x9e\x17\xbc\xdf\xc5\x3a\xff\xca\x58\xa8\x4c\x95\x96\xf5\x4f\xfc\xaf\xe3\xd5\x8d\x05\xbf\x92\x7e\x29\x36\x85\x5f\x9c\xf2\xf1\x96\xe1\xe9\xf4\x6f\x1b\x92\xb3\x0f\xcf\xbf\x9b\xd2\x0d\x26\x75\x37\x1a\xdb\x78\x8a\xf5\xbb\xf3\x24\x1c\x22\x0c\x31\xf2\x49\x3f\x42\x6d\x23\xe5\x22\x80\xaf\x44\x91\xcb\x54\x81\x03\x12\xac\xff\xfc\x7f\x9f\xcc\x9e\xfd\xeb\xe2\xbf\x1f\xcf\xfe\xfc\x65\x08\x8f\x25\xd1\x21\x02\x6a\xad\x26\xac\x0e\xa2\xcb\xc3\x63\xb3\x25\x35\x20\x26\x96\x8f\x5b\x2b\xd1\xba\x61\x55\x87\x5a\x37\x6f\x3e\xbe\xc9\xb2\xaf\xfe\xfa\xa7\xe5\x2d\xdd\x4b\x34\x6e\x2b\x6b\x8a\x72\x20\x78\xb2\x6e\x8d\xcb\x9f\x2d\xec\xb9\xf8\xe2\xe3\xe7\xe7\xe7\x95\x49\x2f\xcf\x98\x27\x4f\xf8\x10\x3a\x89\xe0\x4f\x9f\x5e\xcf\xda\x09\x0d\xcc\x88\x84\x58\xb7\x57\x60\x61\x55\x71\x85\xb5\xb3\xf3\x3f\xfc\xff\xd3\xcf\x67\xcf\x3e\x9a\x7d\xf6\x8f\x97\x69\x2d\xc9\xb4\xcd\xd2\x50\x45\x56\x5a\xeb\x4a\x1a\x77\x63\x89\xe3\xe5\x5e\x5e\x77\xfa\x02\x33\x8a\xea\x76\x5f\x73\xce\x34\x4e\xa3\x41\xb6\xa9\x63\x6b\x35\x81\x81\xd2\x29\xe9\x68\xa0\xac\x55\x79\x6b\xcb\x5e\xdb\x31\xac\xec\x14\xac\x2a\x60\x32\xe2\x96\x9c\xb6\xf5\x1d\x03\xf8\x9d\x4b\x8f\xe5\xa8\x33\x2e\x83\xa2\x63\x38\xbc\xb4\xc7\x2f\x10\x0c\x8a\xb6\xe8\xf3\xb8\xb2\x24\xe7\xae\x3b\x08\xfe\x98\xa0\x79\x8c\x1c\x95\xe8\x16\x0c\xac\x74\xff\xa3\x42\xf3\x1c\xf5\x14\xb6\xee\xd8\x2d\x95\xcf\xd4\xa1\xb5\x21\x22\x36\xd4\xe3\xe5\xfd\x50\x20\x6f\x55\x11\xb9\xcd\xa1\xa9\x07\xfc\x29\x76\xa3\xfd\x57\x77\xaa\x96\x56\xb7\x45\x93\x5c\x31\xd8\xf0\x4c\x46\x7e\xad\x37\xfa\x44\x65\xa0\x4a\x7b\x9d\x16\xbf\xa9\xd4\xb5\xa5\x05\x2c\xa4\xc2\xf2\xd8\xba\x97\x17\x43\x29\xa4\x07\x84\xdf\x28\x51\xd2\x92\xb4\xad\xbb\x08\xb6\x70\xe8\x58\xc2\x1b\x1d\xad\x16\x7a\x38\xbe\x84\xbb\xc9\x51\x88\xb5\x2a\xb2\x52\x80\xc3\x46\xa9\xfe\x34\x75\xcd\xfe\xfa\xf3\xdf\x3f\xff\xdb\x47\x5f\xfd\xe7\x9f\x95\x8e\xba\x0a\xbb\x1d\x49\x05\xdb\xe6\x92\xd1\x51\xbb\xaf\x46\xba\x4d\x7c\xa8\x74\xee\xb6\xdf\x23\x95\xf6\x3e\x78\xff\xfe\x03\x70\x9d\x52\xc9\x5e\xe8\x82\x40\x32\xa9\x0e\x66\x79\x29\x2c\x2f\x50\xdb\xd8\x2d\x89\xdc\x4e\x78\x9b\xcc\xf5\xc2\x99\x56\x65\xb1\xed\xf6\xdc\x6f\xc9\x9d\x6e\x2e\xd7\x8a\xd6\xda\x3a\x7f\x04\xf7\xb5\xcf\x2f\x3b\xaa\x8f\x91\xee\x8d\x41\xc5\x59\xd0\x22\x34\x03\x89\x79\x90\x30\xac\xda\xd1\xab\x31\xe9\x89\x76\x95\x8b\x4b\x6e\x39\x0a\xf7\x8d\x84\xa1\x30\x9d\x73\x19\x79\xf8\x44\x95\xd2\xf6\xd8\xd1\x46\x53\x36\xee\xba\x36\xcc\xb5\x7f\x1f\xef\xed\x10\x86\xdf\x2e\xd0\x87\x4a\xd9\xf6\x62\xe9\x6f\x96\x16\x24\x8b\x52\x88\xa6\xb4\x1c\x1d\xbe\xfd\x16\xa8\x61\x7d\xc0\xe8\xdf\xfa\xc1\xe1\xdb\x6f\xcd\x8f\x13\x70\x57\x13\x75\xdc\xb1\xd3\x01\xcc\x2f\x99\x56\x49\x5c\x66\x64\x40\xb9\x53\xdf\xc8\x35\xb8\xb3\x0f\xcf\x67\xbf\xfe\x0c\xde\xcc\x5c\x32\x7e\x2f\x51\xc5\xf4\x0d\x7f\x4f\xd7\xe6\x93\x16\xc3\xc3\xd8\x62\x9b\x6c\xa4\x9a\x59\x47\x3c\x9c\x92\xbd\x17\xde\x45\x2e\xc5\x14\xaa\x2b\x06\x13\xee\xf5\x16\x2f\x2e\x96\x0f\xe4\x0b\xd7\x49\xfe\xc8\xfa\x2e\xc9\x32\xdc\x4d\x75\xe6\x03\xab\x77\x53\xdb\xe1\x19\xc1\x73\x93\x68\x25\x44\x0d\xd8\x8c\xb4\xdd\x78\x05\x03\xee\x94\xc6\xaa\x1c\x50\xa6\x50\x21\x41\x73\x79\xb2\x8d\x39\x5c\x9a\x82\x4b\x8e\xdf\x8d\x74\x81\x09\xf9\x3f\x6d\x0c\xbb\x4b\xd7\x41\xaf\xee\xb3\x1b\x21\x47\x6f\x76\xe6\xb7\x67\xfb\x4f\x9a\x2f\xe6\x2f\xac\x8e\x61\x6f\x88\x7b\x07\xcd\xa8\x40\x99\x95\x98\xb9\x89\xc7\xa3\xc5\x89\xaa\x40\x9d\x6a\x71\x0c\x7b\xa1\x5a\xed\x1d\x40\x1c\xc3\x54\x95\x90\x97\xc6\x82\x21\x0b\x08\x63\x14\x3c\x85\xd3\x7b\x27\x30\x22\x4d\x40\xc2\x90\x17\x99\x70\x21\x20\x73\x22\x12\x48\x6b\xa5\x1b\xe8\x38\x86\x1c\xcf\xee\x72\x41\xf7\xf9\x63\x3a\x86\xa3\xc3\xc3\xc3\x05\xcd\x61\xce\xbc\x57\xe6\x6e\x2e\xcc\x3c\xbd\xf9\x46\xf5\x10\xbf\x16\x44\x5f\xdd\x67\xde\x52\x76\xb3\xa3\xe4\xfe\x9e\xaf\x38\x24\x28\xb1\x7b\x07\x30\x2c\xa5\x2f\xb4\xfb\x34\x26\x69\x0f\x40\x1e\x80\xb8\x09\xb5\x37\x50\x90\xb6\xfb\x7b\x4e\x0b\xdc\xf7\x4b\x28\xed\xc0\x7b\xe8\xfd\x03\xaf\x83\x80\xd7\x61\xef\x00\x3c\x01\xf7\x2e\x6b\xdd\x0d\x0b\x78\x2d\x5e\xa7\x73\xc3\x92\xb1\xf5\x41\xa6\x61\xe5\x5e\x29\x6d\x61\xe5\x26\x0f\xa0\xd0\x34\xe6\x34\x79\x27\x3d\x00\x2e\x53\x3a\x5b\xe3\xc9\xa1\xe7\x69\xf8\xd9\x8a\x1a\x4f\xc3\xd8\x7c\x71\x35\xee\x10\xc3\x8c\x7b\xec\xb8\x62\x7c\x09\xf9\xe5\x60\x8f\xfd\x0d\xff\x37\x01\x00\x00\xff\xff\x61\x32\x71\x84\xf1\x17\x00\x00")

func templatesUploadTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUploadTmpl,
		"templates/upload.tmpl",
	)
}

func templatesUploadTmpl() (*asset, error) {
	bytes, err := templatesUploadTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/upload.tmpl", size: 6129, mode: os.FileMode(509), modTime: time.Unix(1509976707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWebshellTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\x4b\x8f\xdc\xc6\xf1\xbf\xef\xa7\x28\xf1\x7f\x98\x59\x69\x49\xae\xec\xdb\x6a\x38\x06\x2c\x09\xf6\xfa\x2f\xd9\x81\x56\x86\x03\x04\x81\xd0\x43\xd6\x0c\x5b\x6a\x76\x53\xdd\xcd\x99\x1d\xad\xf6\x10\x18\x70\x82\xf8\xe2\x5c\x72\x08\x72\x88\x81\x00\x09\x10\x20\xb9\x24\x81\x03\x59\xc8\x97\x91\xb3\xca\xb7\x08\xba\xf9\x7e\xcc\x43\x72\x8c\x10\xd8\x1d\x4e\xb1\x1e\xbf\xaa\xae\xaa\xae\x1e\x4e\xae\x45\x22\xd4\xeb\x14\x21\xd6\x09\x9b\x1e\x4c\xf2\x8f\x83\x49\x8c\x24\x9a\x1e\x00\x00\x4c\x34\xd5\x0c\xa7\x57\x9f\xbf\x7c\xfd\x87\x2f\xbe\xfb\xe3\xcf\xe0\x39\xdc\x16\x5c\x09\x86\x13\x3f\x7f\x94\xb3\x31\xca\x9f\x80\x44\x16\x38\x4a\xaf\x19\xaa\x18\x51\x3b\x10\x4b\x9c\x07\x8e\xaf\x34\xd1\x34\xf4\x57\x38\x53\x31\x32\xe6\x9f\x6b\x94\x89\x17\x2a\xe5\x80\xff\x36\xf2\x96\xa5\x2d\xaf\x42\x49\x53\x0d\x4a\x86\x1b\xed\x3d\x56\xce\x74\xe2\xe7\x8c\xfb\x48\x11\xad\x49\x18\xbf\xb1\xd8\x9c\xea\x8e\xcc\x41\xc3\xc5\xb6\x47\x24\x4a\x28\xf7\x43\xa5\xfc\x99\x10\x5a\x69\x49\x52\x2f\xa1\x3c\x77\xad\x1b\x8d\xe9\x46\x35\x46\xc1\x5c\x70\xed\x92\x15\x2a\x91\xe0\x36\x1d\x7b\x60\x21\x9c\x26\x44\xe3\x9b\xa2\xa8\x15\x34\xd6\x67\x9b\x78\xfe\x2c\x16\x52\x87\x99\x06\x1a\x0a\xde\x5d\xf1\x39\x59\x1a\xb2\x47\x43\xe1\x80\x49\xd4\xc0\xa1\x09\x59\xa0\x7f\xee\x5a\xf6\xe9\xc1\xc4\xcf\x73\xf5\x60\x32\x13\xd1\xba\x74\x2f\xa2\x4b\xa0\x51\xe0\xac\x24\x49\x53\x94\xa5\xdb\xf6\x19\x27\x4b\x08\x19\x51\x2a\x70\x38\x59\xce\x88\x74\x23\x9c\x93\x8c\x69\x28\xbe\xe6\xb6\x5d\x45\x23\x74\x40\x0a\x86\x96\x91\x2e\x88\xa6\xd6\x24\x34\x2e\x6b\xa9\xd0\x66\x04\x8c\x7c\x28\x18\x23\xa9\xc2\x0e\xab\x65\xcf\x58\xc3\x36\x24\xa8\xa9\x4a\x90\x67\x8e\x45\x6b\x14\xb8\xf6\x6b\x5f\xb2\x88\x5a\x43\xda\x35\x8e\x5b\xdf\x86\x78\xbb\xe0\x22\x29\xd2\x48\xac\x38\xa4\x52\xcc\x29\x43\x17\x19\x26\xc8\xf5\x16\x71\xab\x82\x40\x44\x34\x71\xb5\x58\x2c\x4c\x20\x4a\x35\x4e\x57\x6f\xc1\x51\x2e\xe0\xff\xed\xd0\x9b\x97\x51\x4a\x78\xa9\x27\x64\x48\xa4\x33\x6d\x13\x67\x4c\x84\x4f\x20\x71\xb5\x7b\xae\xf6\x50\x68\xae\x8b\x0b\x3a\x07\x2f\x53\x28\x1f\x71\x92\xe0\xe5\xe5\x5e\x52\x39\x1c\x2d\x05\x5f\x94\xb6\x6d\x3d\xcd\x04\x8b\x9c\xe9\xc5\x45\x53\xe1\xc4\xcf\x19\xf7\xc3\x93\x63\x42\x1e\xbd\x01\x92\x1c\x8e\x6f\x22\xd1\x09\x88\xc6\x73\xed\x26\x99\xc6\x08\xec\xed\xb9\x02\x1b\x23\x67\x7a\xf5\xe7\xaf\xaf\xbe\xfa\x02\x26\xb3\x2a\xa0\x44\x9a\x72\x9b\xf8\xb3\x69\xa5\x2a\xff\xdc\xbe\xe0\x3e\xd9\xc1\x50\xa7\x70\xb5\xf6\x26\x67\xa1\xe8\x1a\x11\xcc\x49\x84\xa7\xfc\x01\x5d\xc4\x7a\xff\xb5\x9b\x30\x3a\x9d\x90\xb2\xfc\x33\x9f\x89\x85\xc8\xb4\x33\xbd\x67\x3f\x0d\xaa\x89\xcf\xe8\x2e\xec\x19\xdb\x52\x0d\x7e\x44\x97\xfb\x15\x8b\x31\xbe\x67\x81\x5c\x7d\xfe\xf2\x6d\x2c\x6e\x76\x66\xb2\xcd\xcb\x3a\x42\xce\x74\x52\x35\x83\x39\x81\x39\x71\x6d\xeb\x89\x89\xd4\xae\x30\xcb\x4e\x3b\xa9\x63\x3a\x06\x23\x33\x64\xce\xf4\xf5\x3f\xbf\xba\x7a\xf1\xd7\x57\xff\xf8\xf2\xea\xb7\xdf\x16\x39\xd1\x62\x9d\x13\x20\x52\x8a\x95\x53\x66\xce\xc6\xa4\xf8\xde\x6e\x64\x29\x13\x24\xea\x3b\x53\xd1\xb7\xf9\xf1\xdd\xef\x7f\xf3\xaf\x5f\xff\xfc\xd5\x8b\xbf\xbf\xfa\xe6\x97\xaf\xbe\xfd\xdd\xff\xd8\x95\x34\x9b\x31\x1a\xf6\x5d\x31\x15\xb2\x87\x33\xaf\xbe\xf9\xf2\xf5\xcb\x97\xb9\x3f\x3f\x94\x27\x79\x73\x0c\x19\xdd\xd0\x8c\x1a\x1b\x0c\x09\x35\x5d\x0e\x6d\x61\x7d\xc7\xcb\xc9\xa7\xef\x3a\x23\xa9\x16\xe9\x0e\xc7\xaf\x5e\xfe\xea\xdf\x5f\xff\xed\xea\xc5\x2f\xae\xfe\xf4\x97\x1f\xce\xf1\xe1\x0e\x9c\x77\x8c\xf6\x8e\xde\x2e\xda\x89\xcf\xc9\xb2\x39\x3e\x94\xa3\x45\x4a\x16\xe8\x96\xf3\x45\x89\x75\x21\xc9\xda\x9d\x2d\xb6\x0c\x09\x52\xac\x60\x26\x64\x84\xd2\x9d\x09\xad\x45\x32\x34\x25\xf4\x46\x94\xce\x68\xa2\x45\x0a\xab\x98\x6a\x34\xb6\xfa\x23\x0a\xd8\x79\x2b\x70\x12\x22\x17\x94\x17\x76\x4e\xe0\x78\xd3\x58\xd1\x80\x57\xd8\xd9\x3d\x5a\x90\x8e\x44\x42\x4d\xfb\x67\xf4\x19\x42\x7d\xeb\x1a\x20\xee\x3b\x30\xd3\xdc\xfc\xb9\xa9\xa4\x09\x91\x6b\xd8\x77\x4a\x18\x68\x71\xaa\xcc\xa6\xcd\x49\xb0\xb9\xe9\xb6\xa7\xaf\x02\xb9\x16\xa9\x6b\xc6\x51\x55\x12\xa4\xd9\xb9\xb6\xf9\xbe\x73\x1f\x1a\xd8\xc7\x76\x6f\x80\x1d\x5f\x15\x5d\x70\xd7\x8a\x5a\x7f\xef\x89\x05\x88\x4c\xbf\xfd\xde\xbd\xa5\xbf\xf5\x8b\x00\xea\xcc\x6f\x93\x7a\xb1\xdd\xd4\x52\xaa\x3a\x31\x47\x2f\xca\x09\x73\x43\xc1\x35\xa1\xdc\xa4\xd5\xa0\x9e\xbc\x42\x0f\x06\x6c\x15\xb7\xf9\xfd\x35\xd7\x85\x8f\xc8\x92\xe4\x87\x2b\xd7\x9d\xd6\xe4\x1f\x31\x12\x62\x04\x44\x83\x8e\x11\x90\x47\x20\xe6\xf6\x36\x12\x61\x66\xf6\x72\x50\xc2\x7e\x37\xb5\xab\xc0\x34\x65\x98\x13\xa5\x51\x42\xa5\xa7\x79\xb4\x2b\x0e\x21\x8f\x95\xcf\x28\xcf\xce\xef\x10\x65\x4f\x83\xc5\x41\xc4\x0c\x60\xfe\xe3\x0a\xc9\xd6\x43\x62\xad\x29\x11\x51\xc6\x50\x7d\x6f\x3d\x2a\x11\x42\xc7\x34\x3f\xea\xed\xa5\xac\x8e\xd3\x7d\x42\x39\x5b\x43\xfe\x40\x0d\xfb\xde\x3e\xd4\x3d\x56\xfe\xe3\xa7\x19\xca\xb5\xfb\xae\x77\xd3\xbb\x59\x1a\xdd\xe7\x5c\x5c\x29\x68\x9f\x70\xdf\x54\x3a\x65\xd9\x82\x72\xe5\xdb\x23\xd3\x7d\xe4\x59\x01\xc8\xab\x08\x6f\xad\x52\x31\x9a\xa8\x50\x0a\xc6\x4a\x9d\x35\x65\x00\x6b\x1d\xc7\xdb\x99\xd2\x22\x01\xc2\x23\xc8\x75\x41\x1d\xf9\x3d\xa3\x4a\xb9\x4a\x29\xa7\xe4\xad\xc1\xa7\x24\x44\xfb\x6f\x47\x54\x23\x9c\xa3\xac\x4b\x6e\x49\x24\x98\xca\x3c\x6a\x15\x61\x2a\x85\x16\xa1\x60\x6d\xaa\x12\xe1\x13\xd4\x9f\x3e\xb8\x37\x44\x6e\xd3\xcc\xfc\xf9\x19\x8d\x74\xdc\x27\x7f\x88\xa6\xad\x76\xe8\x82\xa9\x36\x45\x8a\x55\x87\xa2\x9e\x3d\xa4\x09\xca\x0e\x11\x95\xa2\x82\x9f\x69\xa2\xd5\xad\x83\x9e\x57\xa6\xdf\xdc\x2e\xdb\x0d\x04\x55\xfd\x7b\x0b\xd4\x77\xf3\xb1\xfe\xfd\xf5\x69\x34\x1e\xf5\x9b\xd3\xe8\xf0\x56\xa5\x2e\x94\x48\x34\x3e\x2c\x78\xc6\x87\x0d\x4b\xf3\x8c\x87\x66\xaf\xed\xf1\xc0\x45\x0b\xe8\x2a\xa6\x0c\x61\xdc\x03\xe5\x85\x31\x65\x91\x44\xee\x31\xe4\x0b\x1d\x77\xe5\xcc\xd5\x17\x92\x98\x88\x25\xde\x36\xa2\x5b\x54\xfe\xe4\xf8\xa7\x0d\x27\xcc\xd5\x6e\xcd\x46\x12\x02\xe0\xb8\x82\x0a\x77\xdf\x7a\x98\x49\x25\xe4\xfb\x66\x67\x3c\x01\x2d\x33\x3c\xea\xb1\xa8\x50\x22\xf2\xff\xc7\xb5\xda\xc4\xe1\x5f\x87\x53\x4e\x35\x25\xac\xf2\x06\x94\x99\x11\xb4\x80\x84\xe8\x30\xb6\xed\xb8\x58\x4d\x10\x92\x2e\x28\x27\x5a\xc8\x91\xaa\xf9\xaf\xfb\x7d\x6c\x82\xa9\x13\xb8\x79\x7c\xdc\xb7\x68\x12\xe8\x04\xde\xed\x3c\xb9\xec\x04\xa4\x4c\x74\x08\x60\xcc\x44\x68\xc7\x26\xaf\x26\x06\x01\x8c\x62\xad\x53\x75\x32\x3a\x84\xf7\x60\xb4\x52\xea\xc4\xf7\x47\x70\x62\x6e\xcd\xdd\xad\xa1\x6c\x3c\x8d\x20\x80\x5a\x1b\xd1\x31\x27\x09\x7a\x2a\x65\x54\x8f\x1d\xdf\x39\xf4\x52\x91\x8e\x0f\xfb\x41\xf2\xab\x0a\x83\xa0\x86\x76\xa3\xd6\x15\x0b\xa5\x8d\x2e\xb8\x01\xe3\x06\x5e\x21\xb5\x81\x37\x1e\x9d\x8c\x9a\xdc\x39\xfd\x04\x46\xa3\x43\xb8\x01\x03\xe6\x46\x7e\xfe\x4b\xa5\x91\xaa\xb1\xdf\x80\xd1\x7b\x86\x52\x15\x4b\x28\xc4\x13\x8a\xb7\x86\x7b\xc1\x7f\x1f\x69\x0f\xe8\xc8\x02\xbc\xb8\xf0\x56\x38\x3b\x33\x80\x3f\x95\xf4\xf2\x72\x08\x4f\x91\xcd\x9f\xe1\xec\xcc\x7e\x1f\x57\x30\x9b\x35\x0b\x45\xee\x7b\x22\x45\xde\xaf\x9f\x4e\x8a\x58\xce\x39\xd5\xe3\xae\x8a\x5c\xb7\x27\xb8\x51\x03\x01\xc8\x8c\x3f\x40\xc2\xca\x52\x1a\xc2\xe7\x09\x1e\x32\xa1\x70\x6f\x6e\x94\x52\xc8\x21\xee\x16\xbb\x69\x77\x34\x2f\xaf\x0f\x50\x24\xa8\xe5\x1a\x82\x1c\x78\x2a\x45\x2a\x14\x96\xe4\x4e\xd6\x99\xfa\x81\xa0\x2b\xeb\x19\xf2\xad\x5e\x3b\x1e\x60\x34\xe4\x0e\x96\xaa\xf3\x43\x00\xf7\x89\x8e\xbd\x10\x29\xb3\x41\xf6\x8a\x1f\x52\x3c\x31\x9f\x2b\xd4\x39\x93\x6f\x31\x74\x42\x5e\x6f\x13\xbb\x94\x14\x5c\xbe\x05\xd8\x5d\x20\xdf\x2f\xf6\x0c\x08\x60\x45\x79\x24\x56\x9e\x42\x7d\xca\x35\xca\x25\x61\xe3\x2c\x8d\x1a\x1d\xfb\x8c\x3e\xc3\x23\xd3\x4a\x8e\xeb\x10\x5d\x0e\xf4\xf9\xce\x4a\xf4\x1a\xbd\x05\x99\xbf\x31\x28\xb2\x6f\x28\x9f\x1e\x15\x91\xa4\xcf\xd0\x34\x0b\xd3\x34\xbb\xad\x44\x37\x91\x8d\xed\x0e\x59\x7a\xb9\x0d\xdf\x16\xc1\x0e\x52\x93\x35\xab\x62\xa5\x2c\x1b\x5c\xaf\x57\xef\xd0\xd3\xe2\x4c\x4b\xca\x17\x63\xd3\x3c\x46\xe9\xf9\xa8\xdf\x63\xe3\x72\x8d\xc6\x36\x3f\xae\x37\x16\x6e\x40\x7e\xa0\x02\xdb\xfb\x56\xfe\xb6\xa0\x84\x64\x3f\xfb\xa1\x1b\x12\xa9\x70\xe4\x37\x03\xf1\x96\xa8\xf6\x89\xa2\xef\xc3\x02\xb5\x82\x90\x30\x86\x11\x08\x1e\x22\x10\x50\x18\x0a\x1e\x99\xad\x4a\xa2\x9b\xef\x5a\x31\xd6\xfb\x52\xb5\x85\x51\x0d\x5a\x34\x75\x6d\xda\xd3\xfa\xab\xd6\xcf\xc5\x5e\x62\x99\xe5\x92\xf8\xb4\x68\x71\x3f\xbe\x7f\xef\x43\xad\xd3\x07\xf8\x34\x43\x65\x7b\x53\x93\x57\xe2\x53\x4f\x70\x89\x24\x5a\x9b\x79\x11\xc3\x98\xf0\x85\xe9\x3a\xa5\xc1\x9e\x76\x73\xd1\x39\x8c\x8d\xa4\x95\x33\x23\x15\x42\x10\x74\x2c\x79\x77\x3e\xf9\xf8\xee\x90\x70\x53\x81\xb1\x99\x29\x23\xfc\xce\xf1\xf1\x26\x66\x73\x71\x5c\xd9\xd1\x0d\x02\xf8\xe8\xec\x93\x8f\xbd\x94\x48\x85\x05\x06\x95\x0a\xae\xf0\x21\x9e\x77\x0b\xa8\x6b\xf1\x5a\xa9\x65\x9b\xa5\x3c\x2a\x3a\x93\x7c\x23\xcb\xe6\xdf\xe5\xad\x95\xe6\xa8\x09\xcf\x9f\xc3\xb8\x49\xf0\x4c\x36\x3c\xca\x53\xf7\x5a\x50\xf9\xd5\x24\x3f\x7f\xbe\xf3\xe8\xdf\xd7\x58\x64\x76\x4f\x65\x4e\x3f\xdc\xe5\x71\xb7\x19\x0c\xe0\x3a\x1a\xd6\xbc\x39\xe4\x9b\xc3\xd4\x8a\x50\x8d\x78\x90\xff\x12\x90\x29\xdc\x02\xbf\x68\xd8\xf6\x75\x50\xd5\xb2\x8b\x7e\xbe\x01\x5d\x1f\x59\x9b\x72\x39\x50\x24\x66\x02\x70\x3e\xb8\xfb\xd0\x39\x02\xc7\x27\x29\xf5\x0b\x27\x94\x7f\x71\xe1\x9d\xde\xb9\xbc\xb4\x07\x2e\xe5\x1c\xd9\x1e\x3d\x50\x66\x0a\x79\x34\x6e\x75\x13\xc8\x5f\xda\x94\xa7\xc4\x89\x5f\xbc\x90\x9c\xf8\xf6\xad\xfa\x7f\x02\x00\x00\xff\xff\x7a\x15\x25\x38\x6c\x1f\x00\x00")

func templatesWebshellTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWebshellTmpl,
		"templates/webshell.tmpl",
	)
}

func templatesWebshellTmpl() (*asset, error) {
	bytes, err := templatesWebshellTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/webshell.tmpl", size: 8044, mode: os.FileMode(436), modTime: time.Unix(1509977170, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/dash.tmpl": templatesDashTmpl,
	"templates/login.tmpl": templatesLoginTmpl,
	"templates/upload.tmpl": templatesUploadTmpl,
	"templates/webshell.tmpl": templatesWebshellTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"dash.tmpl": &bintree{templatesDashTmpl, map[string]*bintree{}},
		"login.tmpl": &bintree{templatesLoginTmpl, map[string]*bintree{}},
		"upload.tmpl": &bintree{templatesUploadTmpl, map[string]*bintree{}},
		"webshell.tmpl": &bintree{templatesWebshellTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

